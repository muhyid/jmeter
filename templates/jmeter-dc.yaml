apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: jmeter
  namespace: vrp-loadtesting
  annotations:
    description: Template to deploy a JMeter load tester to test applications on OCP.
    tags: java,jmeter
    iconClass: icon-rh-openjdk
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/support-url: https://access.redhat.com
labels:
  template: jmeter
objects:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: ${APPLICATION_NAME}
    namespace: ${APP_NAMESPACE}
  spec:
    replicas: 1
    revisionHistoryLimit: 1
    selector:
      app: ${APPLICATION_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        name: ${APPLICATION_NAME}
        labels:
          app: ${APPLICATION_NAME}
      spec:
        nodeSelector:
          node-role.kubernetes.io/odh: ''
        tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/odh
            operator: Exists 
        containers:
          - 
            # args:
            #   - while true; do sleep 30; done;
            # command:
            #   - /bin/sh
            #   - '-c'
            #   - '--'
            name: ${APPLICATION_NAME}
            image: ""
            imagePullPolicy: Always
            env: 
              - name: RUN_JMETER
                value: "true"
              - name: TEST_NAME
                value: ${TEST_NAME}
              - name: MEMORY_REQUEST
                valueFrom:
                  resourceFieldRef:
                    containerName: ${APPLICATION_NAME}
                    resource: requests.memory
              - name: MEMORY_LIMIT
                valueFrom:
                  resourceFieldRef:
                    containerName: ${APPLICATION_NAME}
                    resource: limits.memory
            # ports:
            #   - name: http
            #     containerPort: 8080
            #     protocol: TCP
            resources:
              limits:
                cpu: ${CPU_LIMIT}
                memory: ${MEMORY_LIMIT}Mi
              requests:
                cpu: ${CPU_REQUEST}
                memory: ${MEMORY_REQUEST}Mi
            volumeMounts:
              - name: app-config
                mountPath: "${MOUNT_PATH}"
        volumes:
          - name: app-config
            configMap:
              name: ${APPLICATION_NAME}-config
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:v1
parameters:
  - name: APPLICATION_NAME
    description: "The name of the Image stream (input)."
    required: false
    value: "jmeter"
  - name: APP_NAMESPACE
    description: "The namespace of the application."
    required: true
  - name: MOUNT_PATH
    description: "The path where the configuration file of the application is mounted."
    value: "/opt/jmeter/tests/"
    required: true
  - description: Sets the initial memory request in Mi for the application.
    displayName: Memory Request
    name: MEMORY_REQUEST
    value: "512"
  - description: Sets the memory limit in Mi, available to the application.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    value: "2048"
  - description: Sets the initial CPU request for the application.
    displayName: CPU Request
    name: CPU_REQUEST
    value: "0.5"
  - description: Sets the CPU limit, available to the application.
    displayName: CPU Limit
    name: CPU_LIMIT
    value: "2.0"
  - description: Name of the test that will be executed.
    displayName: Test Name
    name: TEST_NAME
    required: true
